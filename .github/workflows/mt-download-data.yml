name: MT download data
on:
  workflow_dispatch: # manual
  schedule:
    # too often for LFS - cron: '0 18 * * 1,3,5' # Mondays, Wednesdays & Fridays @ 6pm # https://crontab.guru/#0_18_*_*_1,3,5
    - cron: '0 12 * * 5' # Fridays @ 12pm UTC # WEEKLY # https://crontab.guru/#0_12_*_*_5
# gh workflow run mt-download-data.yml --ref mmathieum
# gh run list --workflow=mt-download-data.yml
# gh run watch ; gh browse --branch mmathieum
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  # git commit & push
  MT_ORG_GIT_COMMIT_ON: ${{ secrets.MT_ORG_GIT_COMMIT_ON }}
  MT_ORG_GIT_COMMIT_OFF: ${{ secrets.MT_ORG_GIT_COMMIT_OFF }}
  MT_GIT_COMMIT_ON: ${{ secrets.MT_GIT_COMMIT_ON }}
  MT_GIT_COMMIT_OFF: ${{ secrets.MT_GIT_COMMIT_OFF }}
jobs:
  MT-DOWNLOAD-DATA-JOB:
    if: ${{ ! contains(github.repository, '-bike-') && ! endsWith(github.repository, '/mtransit-for-android') }}
    name: "MT Download Data"
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: MT check out main repository code (no submodules)
        uses: actions/checkout@v4
        with:
          ref: mmathieum
          submodules: true # required to set right token
          token: ${{ secrets.MT_PAT }}
          fetch-depth: 0 # fetch all (not required util release build)
      - name: MT check out submodules
        run: ./checkout_submodules.sh
      - name: MT setup MT_GIT_BRANCH env
        if: github.event_name != 'pull_request'
        run: |
          echo "MT_GIT_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: MT code sync
        # if: github.event_name != 'pull_request'
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        run: ./commons/code_sync.sh
      - name: MT code setup
        run: ./commons/code_setup.sh
      - name: MT commit code change
        run: ./commit_code_change.sh
      - name: MT download data
        timeout-minutes: 10
        run: ./agency-parser/download.sh
      - name: MT push commits
        run: ./push_commits.sh
